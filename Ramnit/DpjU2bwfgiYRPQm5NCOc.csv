rcr
push
cmp
popf
shl
scasb
sbb
jecxz
mov
cmp
fld
adc
fdivr
test
push
ja
jl
pop
sbb
and
fdivr
test
mov
pop
shr
mov
inc
jecxz
sub
out
or
stosb
popa
rcr
loop
das
lodsd
leave
sal
jbe
call
dec
inc
out
mov
mov
test
inc
repne
add
scasd
dec
retf
xchg
int
mov
or
enter
in
dec
stosd
pop
jge
mov
outsb
mov
mov
sbb
and
mov
fist
imul
xlat
jb
scasd
and
fisubr
push
mov
or
jmp
adc
nop
and
jge
outsb
rep
sbb
sub
iret
or
xchg
dec
sub
and
dec
enter
inc
cwde
les
jg
inc
push
iret
mov
scasd
push
dec
dec
enter
scasd
mov
jge
xchg
hlt
test
dec
adc
or
push
rcr
adc
jmp
and
sub
enter
dec
add
leave
mov
adc
leave
in
sub
push
push
aas
out
mov
mov
xchg
jmp
push
retf
dec
mov
mov
xor
xchg
push
in
adc
push
shl
in
retf
inc
rep
mov
push
pop
sub
push
fsubr
scasd
shr
test
sub
mov
mov
inc
push
test
cmp
dec
xor
xchg
and
dec
inc
jno
or
ja
inc
test
pop
mov
sbb
jmp
fmul
and
retf
rcl
out
test
jecxz
popf
jns
mov
aas
out
and
pop
mov
push
mov
pop
mov
xchg
stosb
push
lahf
sbb
dec
and
wait
add
adc
sbb
mov
jge
insb
push
loope
fidiv
dec
lds
mov
retf
stosd
cwde
mov
xchg
sal
aam
retf
xchg
mov
push
push
scasd
adc
inc
pop
lea
nop
rcr
in
call
test
cmc
push
cmp
clc
sbb
push
outsb
xchg
imul
xor
sub
fistp
mov
imul
xchg
mov
inc
dec
mov
aas
lock
and
and
lds
popf
pop
lodsb
jge
fcomp
int
insd
add
imul
stosb
jnp
shl
call
retf
xchg
shr
in
sbb
inc
cmp
scasd
out
sal
pop
sbb
sub
int
nop
cmp
cdq
retf
sbb
push
popa
imul
sbb
mov
mov
and
rcl
push
jmp
push
mov
push
jecxz
xchg
and
push
out
fxam
test
jo
xchg
loope
jbe
sbb
mov
das
bound
lodsb
in
rcr
mov
cmc
push
push
jnp
shl
mov
jmp
inc
pop
lea
mov
add
enter
insd
mov
add
and
lock
ja
stc
jecxz
sub
test
movsd
pop
jle
mov
pop
mov
fsubr
sbb
pop
xchg
mov
dec
sbb
lahf
hlt
cmp
loop
mov
test
sahf
pop
adc
cdq
cmp
xlat
movsb
pop
jg
inc
outsd
sub
push
jns
hlt
xchg
xchg
push
jmp
jp
or
cdq
cmp
mov
pop
xchg
push
wait
sal
sub
xchg
mov
jg
push
jge
cmp
popa
pop
fisubr
int
mov
sub
int
xchg
not
xchg
cmp
adc
push
sub
xlat
add
shr
mov
sbb
mov
pop
jb
push
xchg
ja
stosb
in
iret
xor
cdq
in
imul
scasd
xchg
pop
js
out
jmp
push
dec
mov
fsub
jmp
and
retf
and
pushf
mov
cmc
cmp
mov
jns
mov
imul
rcr
jo
lodsd
cmpsd
int
cmp
cli
jp
xchg
jle
aas
enter
popf
push
adc
mov
jnp
mov
int
iret
inc
mov
pop
jl
call
shl
mov
popf
cdq
mov
push
sub
xlat
jg
int
sub
lock
and
into
das
xchg
or
dec
stc
cmp
enter
cli
add
sar
inc
inc
inc
add
add
mov
add
lock
call
add
call
mov
call
cdq
lock
cdq
lock
mov
lock
sldt
setno
cdq
add
mov
call
inc
outsd
and
add
and
popa
popa
outsd
imul
inc
outsd
imul
bound
inc
jmp
jmp
jmp
and
or
jmp
jmp
jmp
jmp
mov
jmp
add
add
mov
or
add
ror
or
or
add
add
mov
or
sub
mov
add
lea
push
mov
push
push
push
mov
call
push
call
inc
push
push
dec
push
and
inc
outsd
jb
inc
popa
and
sub
pusha
mov
lea
push
mov
shl
push
mov
shl
push
push
call
lea
mov
or
xor
or
mov
add
push
push
mov
inc
add
lea
movzx
lea
mov
dec
cmp
pop
lea
mov
call
test
sbb
mov
test
mov
lea
mov
mov
mov
mov
push
rep
mov
mov
add
jmp
pop
pop
jmp
add
mov
sub
adc
inc
call
adc
call
jb
push
xor
xor
movsb
xor
dec
jle
call
xor
call
sub
mov
inc
jmp
mov
mov
call
adc
dec
xor
cmp
adc
cmp
adc
mov
call
adc
call
adc
call
add
add
push
sub
lea
rep
pop
jmp
