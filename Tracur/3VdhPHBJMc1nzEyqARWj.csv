and
dec
xor
retf
sbb
push
xchg
dec
cld
push
mov
mov
sahf
retf
retf
sub
sbb
fstp
xor
mov
retf
mov
cdq
mov
mov
sal
lea
inc
mov
test
mov
sahf
xor
sbb
mov
sub
lea
sub
lahf
sub
sbb
xchg
stc
add
clc
int
dec
push
xor
add
fiadd
push
retf
jmp
sub
mov
leave
xlat
jg
xor
xor
cmp
retf
cmp
test
fisubr
imul
mov
inc
mov
retf
inc
mov
inc
retf
pop
leave
sub
mov
dec
or
retf
pop
sbb
and
pop
pop
and
mov
or
or
sub
retf
mov
dec
xchg
retf
xor
pop
adc
fild
pop
pop
inc
sbb
dec
lahf
xchg
retf
mov
dec
cdq
inc
retf
cmp
pop
lds
or
cmc
sub
retf
or
popa
and
add
wait
and
mov
pop
or
push
inc
sti
xchg
pop
push
xlat
cmpsd
xchg
cmp
enter
add
mov
add
sar
cmp
retf
push
xchg
cmp
mov
xor
popf
sbb
fcomp
push
retf
mul
rcl
push
cmp
jmp
lodsd
retf
sbb
sbb
dec
mov
les
jmp
fnstcw
retf
mov
push
inc
mov
xchg
mov
mov
adc
retf
sub
lahf
rcr
adc
retf
push
lahf
xor
xor
add
pop
sub
scasb
lock
mov
inc
and
imul
sar
xchg
retf
fsub
or
retf
xchg
mov
xchg
inc
retf
retf
retf
les
movsd
retf
mov
cwde
retf
inc
test
retf
or
sal
retf
mov
sub
mov
pop
xchg
add
popa
retf
retf
mov
xchg
dec
mov
test
add
dec
mov
mov
stosb
xlat
xor
xor
inc
dec
test
xchg
popa
stc
jmp
neg
sub
push
dec
mov
pop
add
mov
lodsb
lodsb
add
mov
add
jmp
test
cdq
xchg
add
movsb
fidiv
mov
les
jmp
dec
sti
retf
dec
retf
inc
add
jbe
sub
or
fistp
test
inc
mov
retf
or
pop
dec
push
lodsb
and
adc
pusha
mov
mov
sub
and
fisubr
mov
jmp
and
mov
push
push
pusha
sahf
adc
stosd
or
add
cmpsd
or
sar
retf
mov
jmp
cmp
lock
retf
push
lds
shr
int
push
test
scasd
adc
dec
xchg
or
sub
push
push
or
xor
sub
mov
jmp
retf
shl
pop
sbb
pop
or
mov
pusha
retf
int
inc
xlat
std
test
cmp
jmp
retf
or
xor
sub
push
push
push
dec
pop
cmpsd
pop
cmc
rcr
mov
xlat
lodsd
push
mov
leave
sub
xchg
inc
sahf
push
xor
cld
jmp
mov
retf
push
mov
retf
pop
clc
mov
cmp
popf
inc
add
retf
xchg
retf
mov
sub
or
popf
retf
lodsb
push
mov
dec
push
pop
sal
fnstcw
add
retf
lea
sbb
cli
cld
add
mov
mov
and
cwde
and
and
add
pop
xchg
mov
mov
mov
imul
das
retf
sbb
push
and
scasd
xor
pop
div
inc
lahf
std
cmp
xchg
les
fsub
mov
imul
fstp
mov
ficomp
xlat
retf
and
push
jmp
mov
test
inc
add
and
pop
sub
fcom
mov
or
cli
mov
pusha
sub
jns
pop
xchg
xor
dec
mov
inc
fld
retf
retf
adc
push
sbb
mov
fstp
dec
popa
mov
sbb
add
cmp
retf
jmp
xchg
mov
push
xor
nop
or
retf
mov
adc
jmp
retf
mov
fsub
dec
pop
stc
mov
mov
mov
push
retf
or
pop
cli
push
mov
cmp
int
jmp
mov
xor
sbb
imul
retf
fist
std
push
retf
xor
loop
movsb
cmpsd
retf
sbb
lodsb
add
lea
int
xchg
mov
mov
dec
retf
inc
mov
dec
mov
lds
cmp
int
cmp
mov
lahf
les
repne
cli
dec
push
mov
lds
sub
cdq
mov
push
pop
retf
idiv
retf
sub
shl
sbb
mov
pop
test
std
mov
retf
cdq
adc
retf
inc
and
retf
mov
lea
cmpsb
retf
mov
sub
mov
mov
dec
dec
mov
or
sbb
or
jmp
pop
sti
retf
jmp
xor
mov
xchg
push
mov
mov
xchg
sub
or
int
lds
retf
push
xchg
pop
push
adc
adc
add
retf
sub
mov
shl
aas
retf
push
xchg
stc
mov
scasd
jmp
and
push
sti
xor
sbb
mov
push
pop
retf
aas
mov
inc
wait
push
xchg
and
mov
cwde
cmpsd
lahf
nop
retf
test
sub
or
fimul
push
and
or
cmp
inc
dec
sti
lds
retf
lds
cmp
retf
lea
sub
or
mov
xor
mov
dec
mov
mov
retf
mov
mov
push
wait
pop
push
inc
push
shr
pop
xchg
dec
add
scasb
xchg
adc
or
dec
or
add
push
test
add
retf
inc
mov
push
retf
xchg
mov
sal
xchg
dec
fistp
mov
or
push
cmpsd
push
pop
pushf
mov
mov
push
retf
adc
retf
leave
push
retf
retf
jmp
popa
push
retf
xchg
sbb
cmc
adc
mov
xor
push
add
popf
stosb
enter
ficomp
or
retf
mov
aam
lodsb
mov
popa
cmp
wait
lahf
mov
push
fisub
and
mov
retf
retf
adc
mov
add
aas
xor
push
or
fsub
mov
retf
retf
retf
mov
shl
cmp
repne
sbb
imul
inc
retf
and
cmpsd
pop
mov
sbb
test
pop
xor
test
pop
dec
cwde
mov
clc
retf
or
mov
or
wait
mov
push
add
sub
inc
retf
cmp
lodsd
pop
pop
dec
mov
test
retf
retf
dec
div
mov
sahf
sbb
xchg
shl
xchg
fidiv
adc
adc
jmp
and
rol
int
cwde
xor
retf
push
mov
jmp
mov
retf
pushf
and
mov
add
sti
fstp
dec
mov
pushf
and
xchg
sub
pushf
jmp
mov
sub
sub
rol
retf
mov
or
dec
mov
retf
fistp
push
retf
xchg
jmp
xlat
retf
sahf
xchg
sti
or
pop
inc
bsr
xchg
retf
retf
dec
retf
pop
mov
push
retf
retf
mov
retf
cld
and
sahf
push
push
das
xchg
and
popf
popf
push
retf
xor
retf
das
mov
cwde
fisub
sub
retf
test
mov
or
mov
push
add
jmp
push
cli
xor
xchg
pop
and
stosd
cmp
retf
inc
sar
test
sti
fmulp
cmpsd
xor
add
jmp
add
lds
sbb
mov
retf
pop
mov
add
cmc
and
pop
jmp
sbb
retf
fistp
xchg
fmul
or
and
cmp
mov
sbb
retf
xchg
cmpsd
mov
retf
scasd
retf
sti
mov
retf
inc
xlat
retf
mov
pusha
cli
retf
pop
int
cld
cld
les
xor
lodsd
pop
or
push
or
xchg
xchg
retf
mov
xor
xor
retf
cli
int
push
or
int
test
xor
retf
retf
retf
stosd
stosd
mov
xor
jmp
retf
stc
cmp
cmp
sub
sbb
dec
lahf
push
pop
sbb
xor
xor
rcl
inc
rcl
retf
push
std
retf
sub
retf
mov
test
push
jmp
cmc
xchg
retf
mov
sbb
nop
imul
cmpsd
scasd
movsd
mov
repne
mov
retf
and
push
mov
dec
retf
mov
pop
cdq
pop
add
fnstcw
mov
inc
inc
not
retf
mov
mov
pop
fistp
pop
rol
and
retf
dec
jmp
or
push
or
retf
fdivr
retf
mov
sbb
retf
cmpsb
or
int
jl
jns
mov
mov
popa
add
aam
dec
push
retf
pop
retf
mov
sub
or
retf
xchg
movsd
mov
rcr
fidiv
push
imul
mov
jmp
sal
sbb
add
mov
pusha
fucompp
retf
mov
stosd
leave
jmp
sub
inc
pop
mov
stc
mov
leave
push
and
push
inc
retf
mov
or
mov
retf
retf
xchg
retf
fstp
pop
retf
cwde
xor
inc
and
and
xor
retf
retf
mov
xchg
adc
inc
retf
mov
retf
xchg
add
push
retf
retf
retf
dec
jl
mov
xchg
test
cmp
sbb
rol
retf
push
add
pop
enter
sub
and
shr
mov
imul
std
retf
imul
retf
mov
retf
mov
int
cmp
retf
retf
xchg
lodsb
retf
imul
inc
mov
mov
mov
or
or
and
test
retf
mov
push
sal
pop
retf
inc
retf
push
dec
stc
xchg
cmc
xor
mov
and
mov
movsb
mov
test
cmp
enter
retf
movsb
sub
retf
mov
cmp
retf
retf
inc
mov
aas
pusha
test
test
mov
shl
retf
sbb
mul
jmp
mov
retf
fidiv
add
inc
adc
and
cli
mov
das
or
jmp
cmp
retf
mov
neg
push
mov
retf
mov
jmp
cmp
retf
or
xor
mov
mov
inc
test
popa
retf
jmp
mov
dec
fdivr
mov
push
inc
cmp
adc
sbb
pop
retf
xor
mov
xor
inc
sti
and
pop
xor
stosb
mov
inc
mov
cmp
sub
dec
lodsd
mov
test
and
rcl
jle
inc
sbb
cmp
retf
mov
pop
xchg
cwde
xlat
pop
retf
cmp
sal
jmp
shr
jmp
mov
push
push
mov
cmpsd
test
fldcw
pop
pop
div
xor
cli
or
push
retf
xchg
xchg
retf
retf
wait
pop
push
aam
xor
adc
movsb
retf
ror
mov
and
xchg
mov
retf
retf
jmp
wait
and
fdiv
xchg
mov
sub
popf
xchg
xchg
push
or
sbb
fxch
mov
mov
dec
lodsd
dec
dec
popa
sub
or
push
retf
mov
retf
or
fadd
cdq
imul
retf
xchg
mov
test
and
add
retf
mov
or
sbb
jmp
mov
pop
pop
lds
retf
cmp
mov
retf
jmp
mov
cmp
imul
pop
cmc
mov
jmp
cmp
pop
stosb
dec
rcr
test
pop
mov
pop
retf
pop
cmp
sub
retf
xchg
xchg
sub
retf
cmp
fld1
imul
pop
dec
xor
cmp
mov
mov
mov
push
xor
retf
retf
aas
cmpsd
mov
retf
xor
rol
mov
push
xor
retf
mov
and
popf
adc
cmp
popf
inc
dec
xchg
push
mov
mov
pop
push
mov
aam
push
mov
das
test
mov
push
mov
retf
cmp
xchg
retf
mov
dec
and
lea
retf
xchg
les
cdq
cmp
retf
xor
push
inc
jmp
shr
sbb
fnstenv
movsb
aam
mov
dec
pop
cmpsd
retf
mov
mov
retf
retf
xchg
mov
retf
imul
adc
mov
and
dec
and
retf
retf
pop
push
cwde
mov
cmp
inc
sbb
aam
enter
retf
xchg
xor
xor
xchg
imul
lodsd
mov
mov
add
adc
sub
test
pop
mov
or
xor
retf
pop
sal
int
retf
lahf
adc
stosb
cwde
test
pop
retf
dec
xchg
sbb
retf
add
xor
mov
add
and
mov
push
add
std
push
sub
pop
pop
fadd
cmp
cmp
retf
sub
add
pop
jmp
mov
and
push
mov
or
mov
push
fld
and
retf
mov
retf
int
xchg
retf
pop
push
retf
adc
xor
mov
mov
or
scasb
aam
scasb
retf
adc
push
stosb
add
jge
push
mov
xchg
pop
add
retf
adc
sub
sbb
sbb
sbb
retf
retf
retf
mov
cmp
inc
inc
inc
retf
xchg
push
dec
mov
pop
pop
sbb
and
imul
push
retf
and
mov
sbb
xor
and
cmp
retf
push
mov
retf
retf
wait
xchg
leave
and
lodsd
pop
sbb
mov
shl
push
push
mov
mov
dec
movsb
imul
mov
ja
retf
mov
sbb
retf
mov
retf
sbb
push
pop
push
sub
mov
xor
mov
retf
mov
and
scasb
retf
test
or
and
jmp
stosd
dec
xchg
retf
inc
mov
retf
xlat
adc
test
cmp
pop
mov
xor
mov
mov
pop
sahf
dec
retf
mov
cli
add
clc
mov
adc
mov
adc
retf
jmp
retf
retf
mov
jmp
retf
retf
cwde
push
retf
pop
adc
retf
retf
or
retf
or
fnsave
mov
xchg
cmpsd
pop
sar
pushf
xor
enter
or
pop
inc
mov
inc
add
pop
and
push
aam
xchg
sbb
and
and
add
sar
mov
mov
and
imul
adc
scasd
mov
xor
and
dec
jmp
dec
xchg
mov
mov
sub
retf
xor
fisub
pop
cmp
dec
xchg
adc
and
retf
push
mov
retf
inc
retf
push
jmp
pop
mov
mov
jmp
pop
popa
sub
push
retf
mov
jmp
test
mov
test
stosd
push
sbb
pop
pop
retf
inc
test
mov
lea
jmp
xchg
mov
or
retf
adc
fisub
sub
retf
dec
retf
sbb
mov
sbb
retf
retf
retf
fdivr
retf
jmp
mov
enter
mov
jg
retf
retf
retf
mov
cld
sbb
xor
retf
lodsb
mov
mov
or
mov
push
push
mov
scasd
mov
fidivr
or
xchg
dec
cwde
jmp
inc
push
retf
test
pop
retf
mov
fist
not
retf
or
cmp
shr
popf
cmp
mov
or
retf
push
fld
cmpsd
retf
leave
pop
push
inc
pop
mov
retf
sar
dec
xchg
push
retf
mov
mov
pop
rcr
pop
retf
cdq
mov
sub
fsub
retf
retf
or
test
scasb
xchg
mov
xchg
imul
movsb
lahf
fst
mov
inc
and
aas
fsubrp
and
push
scasd
dec
jle
jmp
xchg
stc
mov
xor
retf
retf
mov
test
mov
xor
retf
pusha
popa
retf
mov
wait
lodsb
sbb
inc
xchg
cmp
popa
xchg
xchg
inc
fucomp
mov
xor
xchg
xor
retf
dec
enter
or
xchg
or
fist
dec
sub
rcl
jmp
mov
mov
mov
push
mov
das
int
mov
mov
sbb
push
mov
jmp
mov
dec
cdq
push
fild
push
dec
pop
dec
mov
mov
test
retf
retf
sbb
rol
push
mov
fiadd
mov
mov
dec
mov
or
test
or
cli
cmpsb
inc
imul
push
mov
imul
retf
and
pop
cmp
xchg
mov
test
inc
and
retf
mov
leave
aas
push
int
jnp
dec
inc
pusha
mov
dec
mov
mov
or
push
das
add
fisub
lodsb
retf
mov
cli
pop
dec
std
push
retf
retf
rcr
mov
sal
cld
jmp
leave
xor
retf
inc
retf
sbb
push
sar
push
sub
and
retf
neg
mov
test
push
and
lahf
pop
jmp
mov
dec
dec
retf
or
inc
cmp
pop
jmp
mov
retf
aam
enter
pop
retf
mov
dec
retf
retf
lea
cmc
sbb
sbb
retf
lds
or
retf
mov
push
xor
dec
mov
clc
retf
and
retf
inc
add
stosb
clc
pop
push
inc
inc
mov
push
cld
mov
pop
xchg
dec
imul
retf
adc
mov
cmp
and
retf
mov
sub
xchg
retf
push
repne
fsubrp
pop
adc
test
push
mov
mov
or
cld
pop
inc
retf
cmp
xor
test
retf
stosb
mov
mov
mov
inc
fstp
xor
inc
push
pop
xor
mov
sub
sbb
sbb
xchg
push
retf
std
mov
add
enter
and
mov
test
and
mov
and
mov
cwde
cmpsb
xchg
imul
push
rol
xchg
mov
cmc
xchg
shl
adc
stc
dec
pop
cli
cmp
retf
retf
or
or
retf
pop
add
mov
sbb
dec
cdq
pushf
sub
fdiv
xchg
pop
retf
retf
sub
mov
push
retf
mov
dec
push
lahf
test
mov
push
movsb
sub
rep
dec
pop
retf
jmp
lea
push
mov
xchg
retf
and
int
add
test
adc
nop
cmp
mov
pop
xor
sbb
inc
mov
mov
cmp
nop
mov
aam
enter
rol
sub
mov
stosb
pop
nop
dec
cdq
retf
fidiv
dec
lodsb
sal
dec
xor
adc
mov
inc
ror
sbb
or
retf
test
imul
cmp
retf
retf
or
retf
retf
sub
movsd
xchg
pop
cmp
push
and
mov
xchg
push
cmp
inc
test
cmp
xor
jmp
pop
stosb
nop
jmp
retf
sbb
cmp
retf
test
sub
fstp
retf
xor
dec
and
inc
push
retf
leave
jmp
jmp
mov
jmp
sal
mov
shr
cmpsd
sar
adc
or
fdivr
push
mov
inc
and
mov
push
mov
or
adc
test
mov
inc
sbb
dec
stosd
jmp
xchg
retf
mov
xlat
xchg
retf
push
mov
and
xchg
inc
mov
push
and
pushf
retf
shl
pop
or
mov
and
scasd
test
adc
mov
idiv
retf
dec
shl
inc
mov
lodsd
retf
xor
push
retf
push
or
or
popa
lodsb
inc
xchg
mov
retf
mov
cwde
inc
add
sub
add
les
sal
mov
xor
retf
retf
cmpsb
pop
or
xchg
sbb
cmp
adc
mov
dec
ficomp
pop
inc
push
inc
push
retf
or
stosd
pop
mov
retf
retf
or
push
mov
mov
clc
fdivp
and
cmp
shr
push
jmp
inc
adc
sbb
xchg
cmp
retf
mov
dec
sub
and
push
xor
lodsd
push
xor
retf
lea
mov
or
retf
push
mov
pop
sbb
mov
sti
test
adc
popf
and
wait
shr
mov
mov
fucom
and
cmp
fnstsw
adc
mov
add
inc
retf
cmc
or
or
retf
adc
mov
wait
mov
jmp
inc
cmc
sub
sbb
shr
dec
retf
scasb
retf
retf
stc
or
cmp
jmp
mov
cmp
adc
dec
xchg
cli
mov
scasd
popa
clc
mov
xchg
sub
sbb
xlat
cmp
retf
movsd
add
adc
cld
and
ror
jmp
mov
jmp
lds
retf
cmp
inc
mov
mov
retf
retf
jo
popa
fndisi
mov
add
retf
clc
retf
mov
push
aas
sub
mov
jmp
jmp
xchg
mov
sub
dec
lds
xor
rol
dec
xchg
adc
dec
mov
loope
xor
retf
mov
nop
clc
adc
xor
xor
test
retf
rcr
xor
push
movsb
sbb
sti
adc
xlat
sbb
dec
pushf
retf
xor
setbe
pop
pop
int
leave
adc
mov
cdq
imul
fldenv
push
dec
test
mov
fstp
lea
retf
push
mov
and
popf
add
mov
sar
add
push
push
div
cmc
xor
mov
push
dec
inc
div
adc
push
mov
push
push
inc
xchg
retf
mov
retf
push
stc
or
imul
add
xor
dec
rol
push
lea
push
cmp
pop
mov
fisubr
xor
idiv
add
retf
inc
stc
retf
mov
cwde
les
fbld
retf
mov
push
sbb
retf
mov
fsubr
mov
inc
mov
dec
xor
cld
pop
cmp
mov
cli
ror
jmp
adc
or
xchg
jmp
test
dec
and
jmp
popf
imul
adc
retf
retf
das
pop
mov
cmc
retf
mov
inc
leave
jmp
pop
retf
das
jmp
xchg
imul
jmp
imul
sub
and
rol
xchg
test
jno
call
mov
xchg
xchg
xchg
lahf
retf
sub
sub
push
retf
sub
xor
dec
xchg
and
pop
or
cmp
mov
lodsb
push
pop
mov
les
fldenv
int
mov
mov
inc
cmp
retf
mov
sbb
dec
retf
fistp
mov
sbb
or
xchg
sub
fdivr
shr
mov
mov
xchg
dec
mov
or
retf
sbb
sub
or
lahf
pop
xor
mov
retf
mov
push
jmp
fsubr
sbb
jmp
lds
fldcw
cmp
mov
jg
stosb
xor
jmp
inc
retf
push
inc
cmp
cdq
dec
lea
and
dec
test
mov
test
mov
mov
pop
mov
stosd
test
inc
mov
adc
sub
shl
nop
wait
mov
mov
fdiv
aam
cmp
mov
cmp
jmp
adc
or
inc
retf
cli
mov
xchg
or
retf
retf
retf
dec
cmp
adc
sbb
xchg
and
mov
retf
mov
or
mov
inc
add
clc
mov
movsd
sbb
retf
test
das
rcr
cdq
and
sub
retf
retf
and
push
and
pop
mov
mov
retf
push
call
xor
push
rcr
sub
aam
fsub
retf
retf
mov
mov
push
sub
retf
cld
retf
ficomp
rep
and
xchg
shl
jmp
mov
push
xchg
cmp
add
mov
cli
test
mov
pop
retf
mov
pop
or
retf
or
retf
retf
inc
mov
cmp
retf
inc
jmp
mov
push
cmpsd
loop
mov
xchg
xor
ficomp
stosd
pop
xchg
retf
xor
mov
jmp
stosb
mov
retf
retf
mov
dec
mov
aam
and
xchg
test
cmpsb
sub
test
xor
ror
or
xor
dec
and
and
test
pop
adc
cmp
pop
xor
rep
xor
adc
rol
xor
and
mov
xor
fst
jecxz
retf
mov
movsb
test
inc
mov
push
sub
mov
dec
cmp
sub
pop
int
les
add
dec
and
add
or
dec
lodsd
retf
retf
stosb
xlat
ja
pop
not
imul
and
lahf
retf
jmp
dec
mov
mov
inc
retf
mov
wait
xor
scasb
push
sbb
and
stc
pop
rcr
pop
retf
retf
retf
cmp
dec
and
test
shl
test
mov
pop
jmp
inc
xchg
mov
sub
and
lahf
retf
adc
aas
mov
pop
mov
sahf
movsd
push
jmp
retf
rol
dec
int
inc
fild
scasd
xchg
pusha
cdq
push
push
retf
inc
mov
retf
stc
adc
mov
pop
pop
inc
push
mov
add
cmp
popa
push
sub
inc
mov
retf
retf
cdq
mov
sub
and
sub
lodsb
or
dec
popf
xor
xchg
inc
dec
dec
push
xchg
push
and
or
add
mov
jge
pop
cmp
mov
fsub
xchg
mov
pop
cmc
mov
jmp
push
and
sub
xlat
cld
clc
sub
not
mov
sub
lea
retf
pop
retf
movsb
fst
retf
test
push
sub
leave
pop
jmp
retf
and
jmp
and
mov
retf
enter
xchg
sbb
or
pop
mov
call
xor
cmp
mov
mov
adc
sbb
push
dec
lodsb
mov
push
retf
movsb
fdivr
dec
retf
cmc
or
rep
mov
enter
xchg
nop
in
repne
movsd
mov
mov
sub
xchg
in
inc
out
nop
retf
xor
xchg
mov
and
mov
inc
cmp
add
xchg
cmc
jge
pop
add
mov
xchg
fdivr
retf
mov
retf
pop
mov
pop
pop
cmp
dec
dec
retf
rep
dec
xor
aas
enter
push
int
and
and
xor
push
cmp
sub
into
add
mov
pop
mov
xchg
call
sub
cmpsd
retf
inc
retf
retf
push
mov
and
retf
fisub
imul
ficomp
mov
fmul
sti
jmp
sbb
mov
dec
pop
movsd
mov
xlat
add
jmp
push
retf
mov
mov
push
inc
les
retf
retf
inc
or
sbb
retf
inc
retf
sar
push
mov
retf
rol
retf
retf
push
pushf
rol
mov
inc
dec
ror
adc
xor
cmp
mov
dec
sub
push
retf
mov
and
jo
retf
pop
arpl
cld
aas
insb
in
jmp
mov
pop
mov
push
mov
sub
push
push
test
js
or
test
jno
sbb
xor
push
cmp
jno
and
push
add
ror
shl
push
test
jl
mov
sub
add
ror
add
ror
lea
push
mov
add
ror
push
shl
rol
test
jno
and
test
js
sub
sub
or
sbb
sub
push
push
push
test
jns
mov
sub
mov
push
push
sub
xor
inc
xor
add
cmp
and
add
pop
pop
leave
push
mov
sub
push
push
push
sbb
push
or
xor
sub
cmp
ja
sbb
xor
xor
cmp
jo
or
test
jge
or
xor
xor
cmp
jbe
push
push
not
xor
push
mov
jnp
xor
xor
cmp
jge
or
xor
jns
and
mov
jo
and
or
cmp
jo
xor
xor
lea
dec
xor
jb
xor
and
push
push
sub
not
push
sub
cmp
jnp
xor
add
pop
pop
pop
leave
push
mov
sub
push
push
dec
cmp
xor
or
mov
add
ror
or
push
test
jge
sub
mov
mov
sub
push
push
push
call
push
test
jnp
and
sbb
lea
push
push
mov
call
push
lea
or
mov
push
push
xor
ja
push
test
mov
not
push
mov
call
push
add
pop
pop
leave
pop
push
mov
sub
push
push
push
xor
push
xor
or
push
mov
mov
call
push
and
push
shl
lea
sub
or
push
lea
call
push
lea
and
push
push
xor
jno
mov
and
or
ja
sbb
sub
push
push
sub
jo
xor
mov
sub
sub
and
push
mov
add
or
ja
xor
cmp
jnp
or
xor
push
mov
lea
push
call
push
and
lea
call
push
dec
push
cmp
jns
mov
or
push
mov
call
push
push
push
mov
call
push
ror
add
pop
pop
pop
leave
push
mov
sub
push
push
mov
push
call
push
or
xor
not
sub
xor
push
push
mov
call
push
sub
push
push
push
mov
mov
push
push
call
push
cmp
jo
and
add
pop
pop
leave
push
mov
add
push
push
push
and
mov
xor
rol
sub
xor
mov
mov
mov
add
mov
mov
push
and
push
push
rol
ror
mov
pop
mov
or
push
xor
push
sub
mov
add
call
mov
mov
push
rol
pop
sub
mov
mov
add
sub
add
mov
push
pop
push
push
mov
call
add
push
pop
xor
mov
lea
lea
mov
push
call
add
mov
sub
push
push
push
call
add
xor
inc
mov
push
add
mov
pop
lea
push
push
push
call
add
sub
mov
sub
push
push
lea
mov
push
push
call
add
push
call
pop
pop
mov
pop
leave
mov
push
mov
add
push
push
mov
call
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
