das
scasb
mov
xchg
push
xchg
sub
mov
test
clc
popa
or
mov
retf
retf
or
das
sub
mov
retf
mov
retf
or
sbb
imul
movsb
mov
scasd
inc
enter
mov
xchg
push
mov
pop
rcl
mov
pop
xchg
sar
retf
cli
add
retf
inc
mov
xor
xor
imul
dec
jmp
retf
pop
sub
test
retf
push
push
shl
and
sti
fsub
scasd
imul
or
mov
xchg
push
push
retf
retf
mov
mov
inc
stosd
fdivr
retf
mov
dec
dec
dec
inc
mov
inc
mov
adc
lodsd
sub
pop
xor
sahf
dec
mov
pop
sbb
push
scasd
ror
add
xchg
cmpsd
sub
shl
enter
jmp
sbb
mov
sub
mov
shr
dec
mov
sahf
cmp
int
inc
clc
test
retf
retf
adc
retf
mov
sbb
xor
retf
mov
cmp
test
lds
xchg
pop
jmp
jmp
movsb
dec
push
std
movsb
jmp
cdq
push
pop
inc
retf
mov
mov
sti
std
mov
mov
pop
retf
jmp
sahf
or
lahf
std
mov
xor
xor
pop
cld
dec
retf
pop
retf
mov
retf
sub
rcl
retf
push
fild
pop
retf
xchg
lds
les
inc
retf
test
add
mov
ror
int
mov
xor
jmp
mov
retf
or
cli
sal
push
retf
pop
xor
std
retf
retf
mov
jmp
dec
push
retf
retf
inc
retf
mov
sub
lodsd
xor
pop
jmp
mov
retf
mov
cmp
and
cli
pop
wait
mov
or
retf
jmp
cdq
cmp
dec
test
mov
sahf
retf
fiadd
and
inc
adc
mov
retf
or
mov
sub
mov
pop
test
dec
retf
mov
retf
mov
add
inc
mov
jmp
dec
sub
retf
adc
sbb
push
aam
push
dec
test
jmp
fdivp
retf
fcomp
pushf
retf
retf
inc
adc
pop
push
sahf
cmp
inc
std
retf
fnstcw
retf
retf
sahf
pop
add
scasd
fst
imul
add
sub
int
test
retf
mov
shl
mov
cwde
popa
les
pop
mov
mov
retf
mov
xor
test
inc
sub
sub
stosb
or
and
or
push
or
sub
inc
push
retf
pop
leave
test
adc
cli
jg
mov
shr
jmp
or
scasb
add
sal
adc
mov
xor
add
mov
mov
sbb
mov
dec
xchg
xchg
and
xor
mov
retf
push
retf
mov
sti
lds
pop
mov
retf
sar
retf
retf
mov
retf
test
cmp
jmp
mov
mov
or
mov
mov
cwde
jmp
lds
jmp
mov
and
lds
dec
enter
cmp
mov
mov
cmp
pop
pop
retf
or
rcr
pop
mov
push
mov
or
dec
pop
mov
retf
push
and
mov
mov
and
pushf
xchg
les
push
mov
pop
retf
imul
stosb
jmp
stosd
dec
retf
retf
and
jmp
fnstcw
mov
dec
scasd
das
xlat
xchg
mov
pop
xor
mov
mov
mov
pop
xchg
stosb
mov
retf
imul
inc
pop
pop
pusha
sbb
cmc
imul
jbe
lodsd
pop
jmp
les
retf
push
pop
pop
push
adc
popa
lahf
mov
test
retf
dec
not
retf
add
retf
sbb
xchg
xchg
or
inc
dec
mov
retf
retf
pop
imul
fisubr
and
mov
and
retf
or
sub
retf
mov
xor
sub
sahf
push
and
repne
cmp
xchg
dec
retf
retf
test
xor
push
mov
int
adc
retf
push
cmpsb
retf
sub
sub
adc
push
and
dec
mov
pop
fst
inc
cli
sal
cmp
and
lodsb
retf
mov
stosd
mov
inc
mov
pushf
retf
cmp
retf
retf
cmp
and
sub
push
retf
fidivr
mov
sbb
popa
pop
pop
push
jmp
cmpsb
movsx
cmc
retf
cmp
push
idiv
cmp
dec
pop
mov
std
sub
jmp
enter
retf
and
sub
push
pop
or
fist
mov
mov
sub
lds
nop
push
retf
mov
mov
cmpsb
movsd
rol
retf
fnstcw
xor
dec
adc
or
cmpsb
adc
movsb
push
inc
jmp
dec
retf
retf
push
pop
lahf
retf
mov
pop
mov
sahf
add
stosd
xor
or
mov
popa
rol
lodsb
cmp
retf
mov
mov
sbb
mov
xchg
cmp
jmp
cdq
mov
pusha
mov
xor
adc
lea
int
sub
fdiv
push
sar
pop
xor
sub
add
lock
aas
push
xor
sbb
pop
mov
mov
or
cmpsd
mov
lodsb
lodsd
mov
xchg
cmp
jmp
pushf
sub
mov
and
pushf
rcl
retf
popf
cmc
retf
jmp
adc
push
fucom
into
add
mov
push
insb
fsubrp
loope
enter
xchg
in
inc
sar
sub
sub
nop
ja
sahf
xor
push
pop
mov
pusha
loope
jl
dec
cmc
div
retf
xlat
retf
retf
sti
lea
retf
cli
aam
scasd
imul
mov
mov
sar
in
pop
imul
cld
jmp
add
pop
cld
retf
sub
mov
dec
or
retf
xor
mov
and
scasb
adc
pop
jmp
mov
cmp
sti
inc
push
mov
push
sahf
fmul
push
enter
push
pop
retf
mov
dec
xor
lea
fild
cmp
mov
inc
rcr
sub
inc
mov
push
push
add
xchg
pop
dec
in
cld
mov
into
adc
xor
pop
dec
and
dec
xor
mov
xchg
cmp
dec
xchg
jmp
add
or
lahf
mov
fxch
adc
mov
and
rcl
sahf
retf
mov
fisubr
inc
stosb
mov
sub
cwde
or
mov
xor
inc
mov
or
pop
xor
retf
test
sub
and
push
test
cmp
xchg
retf
xchg
lodsb
sar
nop
push
nop
cmp
push
push
retf
not
push
pushf
retf
cmp
adc
retf
idiv
cmp
mov
mov
pushf
retf
retf
xchg
push
int
sub
retf
mov
add
retf
jecxz
mov
das
mov
push
xchg
stosb
test
and
xchg
jmp
clc
pop
leave
imul
aas
xor
xchg
retf
cwde
pushf
cdq
mov
retf
sub
xchg
and
clc
fnstcw
cdq
add
mov
xchg
xchg
or
add
xor
jo
cld
clc
xchg
cmp
rep
add
xchg
sub
cmp
pop
push
jnp
stosb
mov
sbb
scasd
stosb
jbe
clc
pop
mov
loope
mov
mov
stosd
xor
mov
mov
adc
mov
and
lahf
fidiv
push
pop
in
xor
loop
pop
pop
stosd
in
jg
loop
sub
js
fisub
sbb
movsd
mov
xor
rcl
pop
loop
push
enter
push
xchg
dec
into
sub
shr
cmp
imul
sal
mov
mov
add
mov
mov
sbb
stosb
push
das
mov
test
or
adc
retf
retf
push
mov
sub
push
push
push
cmp
jge
or
sub
cmp
ja
cmp
jl
sub
sub
add
inc
shr
dec
mov
xor
or
cmp
jns
sub
or
sub
push
and
test
jns
sbb
sbb
mov
test
sub
xor
jb
and
xor
jns
mov
xor
push
jl
and
push
push
push
push
not
lea
test
xor
add
cmp
jl
and
or
sub
push
push
push
xor
ja
mov
cmp
jo
sub
xor
jp
sub
sub
shl
not
test
jl
mov
sub
add
pop
pop
pop
leave
sbb
push
and
xchg
push
mov
sub
push
push
sub
ror
add
sbb
push
push
sub
and
xor
cmp
sbb
and
push
or
xor
dec
add
and
add
sub
mov
cmp
jp
mov
push
jno
xor
sbb
lea
xor
sub
cmp
jno
or
and
cmp
js
xor
or
push
and
test
jl
xor
push
add
cmp
or
dec
xor
and
test
jp
and
or
add
test
or
cmp
jb
mov
dec
rol
shr
push
add
pop
leave
push
mov
sub
push
push
push
lea
push
mov
lea
call
push
test
js
and
or
add
and
push
sub
jnp
mov
ror
mov
ror
not
push
add
cmp
jb
xor
xor
jle
or
and
push
mov
call
push
and
add
push
push
push
call
push
mov
xor
or
sbb
xor
push
push
mov
call
push
sub
push
add
sub
xor
jo
xor
xor
push
lea
lea
push
call
push
test
mov
push
mov
mov
call
push
sub
xor
mov
lea
call
push
add
pop
pop
pop
leave
push
mov
sub
push
push
shr
push
push
xor
mov
or
add
cmp
jno
xor
add
jnp
sub
sbb
ror
push
inc
add
push
cmp
jo
add
sbb
push
xor
push
mov
lea
call
push
cmp
jo
or
or
push
cmp
jle
sbb
cmp
jge
xor
test
add
pop
leave
push
mov
sub
push
push
xor
push
lea
lea
push
call
push
lea
push
mov
call
push
push
and
dec
inc
push
xor
xor
mov
push
mov
lea
call
push
sub
mov
xor
or
push
push
lea
call
push
cmp
and
cmp
or
push
xor
or
or
push
lea
call
push
shr
not
ror
mov
mov
push
and
push
shr
mov
lea
push
push
call
push
inc
or
or
sub
push
push
push
call
push
mov
add
xor
jb
xor
dec
and
push
xor
jle
and
add
pop
pop
leave
push
mov
add
push
push
push
push
push
lea
mov
call
add
mov
sub
mov
push
mov
call
add
mov
sub
mov
push
call
add
add
mov
push
mov
push
push
shr
rol
mov
sub
pop
mov
push
sub
push
mov
call
mov
dec
mov
push
pop
mov
mov
lea
call
mov
shl
mov
mov
push
pop
push
sub
pop
add
xor
mov
mov
lea
add
xor
inc
sub
push
mov
mov
pop
sub
mov
and
push
push
push
mov
push
push
push
call
add
call
pop
lea
lea
call
pop
pop
leave
push
mov
call
add
push
mov
add
push
push
mov
call
mov
call
mov
mov
mov
call
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
call
mov
mov
mov
call
