stc
pop
lodsb
clc
cmpsd
and
cdq
or
xchg
xchg
mov
wait
add
pop
inc
and
xchg
xor
push
xchg
pop
dec
sbb
push
pop
sbb
jmp
pop
jmp
retf
cmp
adc
dec
or
and
mov
adc
mov
retf
cmp
push
add
push
dec
retf
mov
xchg
mov
dec
xor
adc
mov
std
fsubr
sub
mov
pop
mov
mov
retf
retf
scasb
fnstcw
sub
fcom
mov
retf
sahf
lds
ror
pop
mov
jmp
mov
pushf
push
popf
cmpsb
mov
retf
dec
enter
fsubr
test
retf
imul
xor
retf
mov
pop
sub
int
jmp
les
xchg
fisub
and
xchg
popa
push
das
movsb
dec
sub
sub
test
dec
mov
jmp
and
retf
mov
retf
cmpsb
sub
retf
imul
mov
sbb
sub
jmp
jmp
pop
mov
mov
add
test
sub
imul
inc
sub
test
sbb
mov
retf
mov
pop
and
xor
sub
retf
push
or
push
or
fild
int
xor
xlat
or
push
lodsb
sub
jmp
mov
lea
push
retf
cmp
pop
mov
mov
dec
cwde
or
cmp
mov
mov
pop
inc
mov
sub
retf
mov
xor
lodsd
std
cld
xor
adc
pop
das
xlat
imul
test
mov
test
pop
push
pop
mov
std
fdivr
cmp
cdq
std
imul
aas
add
sahf
sbb
nop
sbb
dec
retf
mov
xchg
retf
test
mov
and
jmp
sbb
nop
sub
retf
dec
movsd
and
sbb
test
pop
cmp
push
or
sub
clc
or
xor
dec
mov
jmp
retf
push
nop
cmpsd
retf
mov
push
push
inc
inc
mov
cmp
add
push
xor
inc
rol
or
inc
retf
and
add
dec
pushf
retf
dec
xor
mov
pop
wait
jmp
or
and
retf
sar
or
xchg
push
jg
retf
lea
dec
retf
cmp
sbb
sbb
retf
push
pop
retf
cdq
push
and
mov
xchg
mov
fist
or
fldcw
add
cld
retf
pop
mov
xchg
retf
mov
retf
retf
retf
test
mov
mov
retf
push
cmp
pop
pop
lahf
retf
mov
and
sub
nop
pop
and
pop
int
mov
mov
push
mov
xchg
xor
sub
inc
lahf
mov
jo
mov
xchg
rcr
xor
or
retf
retf
add
xlat
retf
jmp
retf
dec
sub
cld
pop
xchg
retf
lodsb
mov
jmp
inc
retf
dec
test
retf
pop
cwde
push
pop
pop
mov
cwde
retf
lahf
mov
mov
retf
mov
stosb
movsb
mov
fadd
pop
std
cmc
movsd
test
test
lock
sbb
mov
retf
wait
mov
pop
enter
imul
fcomp
adc
movsd
retf
cmc
lodsb
retf
cld
or
mov
and
retf
mov
or
cld
retf
jmp
sbb
add
cmp
fsubr
pop
cmpsd
inc
pop
push
or
push
or
mov
or
imul
aam
sub
cwde
int
pop
sbb
scasb
clc
sbb
retf
lea
sbb
xchg
lodsd
aas
mov
inc
push
or
retf
retf
sbb
mov
xor
and
retf
or
pop
mov
mov
retf
push
mov
xchg
push
push
test
aam
dec
fistp
mov
retf
pop
add
cli
and
sbb
test
retf
mov
dec
sbb
stc
and
nop
dec
dec
dec
jmp
cmp
retf
xor
mov
xchg
and
pushf
sbb
pop
lodsb
sub
test
cmp
mov
or
adc
jmp
xor
fnsave
movsd
jmp
imul
pop
mov
cmp
push
push
sti
nop
and
mov
retf
popf
cmp
xor
and
retf
jmp
add
scasd
scasd
xchg
mov
test
jmp
jle
stc
xchg
aas
xor
mov
xor
mov
test
adc
retf
add
retf
and
jmp
movsb
dec
retf
mov
rol
shr
imul
dec
retf
xchg
mov
and
cmpsb
push
push
retf
dec
push
pusha
retf
sub
mov
or
mov
cmp
movsb
retf
mov
rcr
add
mov
mov
test
cmc
pushf
mov
xchg
mov
retf
mov
fcom
retf
mov
push
mov
sub
xchg
and
retf
mov
les
lodsd
push
xor
retf
pop
movsd
or
adc
retf
retf
cmp
and
and
pusha
cmpsd
retf
div
push
or
pusha
cmp
imul
cmp
add
dec
xchg
retf
mov
aam
xchg
cmc
dec
pop
dec
sub
mov
mov
cdq
xchg
push
retf
test
inc
pop
retf
mov
inc
nop
or
pusha
inc
dec
cmpsd
adc
ror
dec
cmp
int
shr
pop
lodsd
retf
or
mov
sbb
mov
fisub
xor
xor
test
or
pop
wait
sbb
retf
retf
cld
leave
mov
retf
xchg
mov
push
or
div
lds
mov
cmp
inc
mov
retf
leave
enter
std
mov
push
fbstp
add
xor
adc
retf
sub
xor
jmp
jmp
inc
push
mov
mov
retf
mov
mov
xor
mov
retf
dec
push
test
shr
lea
xor
add
das
sub
jmp
test
cmp
retf
lodsb
aas
cdq
add
lahf
retf
sub
leave
mov
retf
jmp
xchg
mov
test
xchg
scasb
repne
mov
or
mov
retf
cmp
push
adc
push
mov
xchg
repne
cmc
fidivr
push
push
push
cmc
push
ror
push
inc
push
mov
xchg
retf
or
adc
push
cdq
sbb
sub
push
stosd
sub
add
adc
or
wait
mov
mov
and
mov
xor
and
and
or
xchg
mov
push
or
sbb
repne
mov
mov
shr
cmp
cmp
inc
retf
adc
and
inc
jmp
retf
xchg
push
dec
xor
cmp
and
xchg
retf
pusha
xchg
cli
sti
pushf
mov
push
pop
mov
sub
push
adc
sar
pop
mov
push
sbb
les
jmp
sti
mov
mov
retf
xchg
retf
sbb
mov
sub
pop
test
xchg
sbb
movsd
cmp
sbb
retf
cmp
retf
sbb
pushf
mov
retf
xor
mov
wait
and
push
mov
mov
sbb
or
rcl
cmp
push
mov
popf
cmp
retf
retf
popa
retf
ficom
mov
adc
push
stosb
enter
inc
adc
jmp
mov
jmp
inc
push
mov
scasb
pop
retf
sahf
mov
and
sub
sub
scasd
pop
dec
std
mov
or
mov
and
sub
wait
push
mul
dec
cmp
push
cdq
retf
pushf
push
sub
push
xchg
pusha
fimul
xor
pop
fidivr
xchg
and
mov
mov
imul
popa
popa
inc
retf
pop
sub
enter
pop
sbb
retf
retf
mov
xor
retf
movsd
jmp
pop
sar
and
rol
pop
retf
sbb
mov
dec
sal
or
dec
jmp
mov
xor
mov
push
rcl
jmp
cmp
cmp
xor
xchg
retf
xchg
retf
fadd
mov
test
adc
mov
shr
inc
and
xor
dec
sti
lds
sbb
test
retf
and
push
push
retf
sbb
mov
push
add
add
xor
push
mov
dec
and
popa
xchg
sub
mov
mov
inc
sti
mov
mov
and
dec
or
cmpsd
mov
retf
sar
retf
mov
mov
std
retf
retf
xor
mov
cdq
inc
jmp
xor
and
mov
jmp
sar
xlat
pop
push
push
push
xor
inc
retf
mov
mov
pop
cdq
dec
jmp
xlat
test
pop
or
xor
mov
fidiv
inc
fisub
retf
mov
push
pop
mov
dec
pop
mov
cmpsb
and
popa
push
retf
adc
nop
dec
stc
xor
rol
enter
mov
sub
sal
inc
or
mov
retf
push
mov
retf
stc
mov
push
aam
sbb
push
inc
cmp
and
sal
cmp
or
cmp
jmp
mov
mov
dec
inc
mov
xchg
mov
or
inc
retf
scasb
push
dec
retf
idiv
add
jmp
cdq
mov
retf
mov
pop
inc
jmp
inc
mov
retf
xor
jmp
jmp
push
pop
retf
mov
lodsd
wait
cwde
retf
retf
xor
mov
neg
fst
and
mov
xchg
lds
retf
push
mov
add
jmp
cmp
mov
int
xchg
adc
adc
adc
stc
xor
pop
retf
sahf
push
mov
push
sub
mov
sbb
imul
mov
inc
mov
imul
inc
jmp
dec
retf
mov
xchg
retf
pop
or
das
push
pop
leave
retf
aas
retf
adc
mov
cdq
mov
bswap
mov
cmc
cmp
jmp
retf
pop
retf
mov
lodsb
mov
fucom
sar
pop
retf
mov
or
pusha
adc
pop
xchg
sar
xor
retf
pop
add
test
xchg
retf
retf
sub
jmp
pop
mov
mov
mov
retf
sal
xchg
leave
mov
enter
push
sub
imul
std
pop
sub
retf
adc
mov
movsb
dec
inc
cmp
inc
inc
retf
adc
pop
and
fdiv
push
lds
dec
xor
pop
sar
xor
pop
inc
mov
xor
mov
enter
mov
or
ficom
xchg
cli
push
sbb
retf
mov
pop
mov
popa
dec
push
and
push
xor
sub
push
inc
cld
inc
lds
cli
or
lodsd
jmp
mov
retf
pop
mov
mov
xchg
inc
mov
enter
jmp
adc
wait
pop
retf
mov
mov
push
mov
push
retf
and
ror
dec
inc
mov
push
add
stosd
and
mov
fstp
jmp
cmp
movsb
mov
xlat
pop
jmp
adc
add
rol
retf
or
or
sbb
stc
imul
add
das
enter
xchg
shl
imul
xchg
fcomp
xor
retf
push
mov
push
push
pop
fst
push
mov
stosb
les
sbb
xor
xchg
fst
movsb
and
inc
scasb
pop
test
retf
sbb
stosd
retf
and
sub
dec
mov
pop
popf
mov
jmp
xor
mov
retf
mov
jmp
mov
shl
mov
cmpsb
mov
mov
cmp
push
int
push
retf
imul
retf
stc
xor
retf
mov
jg
sbb
imul
retf
retf
jmp
xchg
adc
add
mov
sahf
pop
dec
dec
scasb
lea
int
retf
jmp
xchg
and
mov
cmpsb
retf
dec
pop
fucom
retf
sub
retf
mov
xchg
xor
push
pop
dec
xor
cwde
add
stc
mov
sar
add
xor
push
mov
mov
adc
mov
cmp
inc
lahf
retf
push
pop
popf
dec
lodsb
add
jmp
lock
inc
retf
add
inc
xor
inc
sti
push
mov
sub
push
inc
retf
pop
mov
mov
push
rcl
inc
popf
sbb
lahf
inc
mov
pop
jmp
leave
retf
call
cwde
retf
dec
push
retf
sub
sub
dec
mov
mov
cwde
xor
mov
sbb
add
mov
sbb
sbb
clc
mov
mov
xchg
cld
sahf
mov
inc
mov
mov
retf
cmp
retf
test
xor
inc
retf
mov
inc
retf
scasd
xchg
mov
dec
mov
cmpsb
inc
int
dec
mov
cwde
push
jge
mov
and
mov
scasd
pusha
push
mov
test
cmp
mov
mov
test
cdq
mov
mov
add
mov
retf
adc
pop
movsd
xchg
sbb
scasb
mov
aam
dec
sbb
retf
push
push
sbb
lodsd
push
imul
sbb
and
and
lock
sub
test
cmp
push
retf
mov
and
retf
push
push
cmp
pop
dec
test
cmp
retf
xchg
cmp
stc
add
retf
popa
xchg
test
push
retf
xlat
test
sti
sub
fnstsw
sbb
jge
dec
push
mov
sbb
add
mov
pop
std
cmpsb
push
adc
dec
push
cmp
retf
retf
dec
mov
mov
mov
xchg
mov
shl
pop
sahf
imul
xlat
pop
cmp
inc
push
scasb
retf
ficomp
imul
sub
fnstenv
fimul
or
xchg
dec
jmp
mov
dec
push
retf
shr
mov
mov
inc
retf
shr
les
mov
mov
mov
xchg
cld
or
cld
scasd
and
dec
pushf
jmp
sar
retf
mov
cmc
or
int
retf
mov
popf
mov
sbb
movsd
pusha
mov
inc
retf
sub
dec
pop
lea
mov
xor
sar
retf
retf
pushf
sbb
dec
or
add
mov
or
ffree
and
or
neg
sahf
adc
fsubr
retf
mov
push
jo
mov
sbb
pop
test
adc
stc
dec
retf
adc
cli
or
shl
sbb
xor
mov
xchg
sub
mov
jmp
inc
retf
retf
std
mov
push
movsb
ror
add
pop
xor
mov
sbb
sbb
retf
mov
mov
retf
or
adc
mov
inc
scasb
xlat
sahf
cmp
inc
sahf
popa
adc
and
cld
popf
and
and
fcom
sti
or
sti
sub
xchg
leave
push
pop
or
retf
xchg
mov
cmp
retf
push
sub
push
test
sar
retf
mov
dec
das
dec
inc
dec
push
mov
mov
int
push
mov
pop
sbb
cld
mov
xchg
das
pop
popa
jmp
mov
sub
sahf
sub
inc
cmc
pop
sbb
retf
fstp
rcr
dec
push
retf
mov
add
xor
mov
xor
xchg
mov
popa
inc
retf
sub
or
cmp
add
mov
pushf
jmp
scasd
adc
nop
xor
inc
cmpsb
jmp
imul
retf
cmp
fistp
mov
add
pop
pop
lodsd
cmpsd
push
adc
dec
xchg
retf
std
mov
lea
mov
jmp
cdq
sub
sar
popf
push
mov
mov
int
stc
mov
adc
or
and
mov
retf
mov
cmp
adc
push
scasd
retf
xor
inc
push
mov
mov
add
lahf
or
push
dec
retf
xor
pop
xor
pop
fbstp
retf
jmp
pusha
movsd
push
stosd
cmp
xor
push
pop
lodsb
sub
jmp
mov
ficomp
clc
lahf
retf
cmpsb
mov
movsd
fstp
pop
popf
and
xchg
fld
retf
sal
xchg
lodsb
sub
xor
jmp
retf
retf
sub
lodsd
xchg
cmp
movsb
sbb
adc
cmp
xor
cmp
sbb
mov
mov
cmp
mov
retf
inc
sub
movsd
scasd
jmp
and
cmpsd
sbb
retf
sal
mov
inc
sal
jmp
mov
xchg
adc
sar
sub
pop
fdivr
and
retf
loop
push
mov
xchg
push
mov
fisubr
cli
pop
dec
adc
ror
shr
retf
inc
inc
mov
retf
mov
cmp
inc
push
or
pop
cmc
retf
sbb
retf
fild
push
fcomp
jmp
mov
pop
retf
retf
mov
retf
fsin
push
retf
xchg
lea
dec
xlat
and
leave
inc
retf
push
cmp
mov
xchg
or
dec
cli
xchg
test
ficom
movsd
push
stosb
pusha
clc
shl
retf
inc
or
push
movsb
dec
push
mov
xor
pop
scasd
dec
fidiv
das
mov
pop
jmp
xchg
mov
cdq
inc
retf
mov
sub
mov
cmp
retf
mov
mov
sub
mov
pop
retf
retf
retf
or
jmp
retf
std
mov
add
retf
or
xchg
mov
or
pop
add
lea
inc
or
cld
pop
xor
inc
push
cmpsd
push
enter
retf
xor
mov
sbb
retf
fcom
xor
push
cmp
retf
jmp
pop
push
das
pop
xchg
dec
retf
xor
mov
xchg
mov
lodsb
int
or
cmp
push
pop
pop
mov
lock
xor
sub
mov
mov
mov
xchg
jmp
mov
lodsb
rol
retf
jmp
sbb
and
and
clc
cmp
push
push
adc
retf
xlat
xchg
xor
jmp
and
cmc
dec
cmpsd
adc
or
push
scasb
cli
mov
sub
sbb
mov
mov
sar
mov
or
test
das
nop
or
mov
inc
and
retf
xor
scasb
jmp
lds
popf
sal
or
wait
retf
retf
mov
test
pop
rcr
mov
pop
dec
or
jmp
retf
and
or
pop
mov
and
add
cmp
sbb
mov
cmpsd
mov
inc
mov
xor
sub
mov
mov
fistp
dec
mov
leave
mov
inc
retf
popa
dec
xchg
sbb
mov
mov
pop
xor
movsd
jmp
retf
push
mov
pushf
test
retf
mov
retf
mov
imul
and
and
retf
cmc
retf
mov
sub
mov
enter
xlat
sub
retf
xchg
adc
retf
or
and
xchg
sar
mov
sbb
mov
pusha
or
cdq
retf
movsb
or
mov
retf
sub
or
cmp
push
fidivr
ror
mov
inc
mov
sti
inc
mov
sbb
jmp
xchg
retf
retf
jmp
rol
retf
mov
mov
retf
push
inc
or
and
and
and
mov
push
sub
pop
sahf
mov
aas
jmp
mov
retf
xchg
pop
imul
mov
lodsb
mov
inc
retf
mov
push
pop
sub
retf
retf
retf
push
jmp
and
pop
adc
xchg
ficom
adc
and
xchg
stosb
das
dec
or
sbb
retf
mov
mov
push
sub
fidiv
retf
test
mov
lds
push
clc
xor
retf
xlat
shl
into
aas
scasb
mov
inc
push
cmp
test
movsd
mov
mov
mov
mov
inc
adc
fldenv
std
lodsb
js
inc
dec
cli
xor
and
sbb
test
push
pusha
fild
pop
dec
sub
cmp
inc
jmp
dec
fidivr
cmpsd
pop
xor
or
mov
xchg
rep
retf
popf
dec
retf
retf
push
retf
xor
pop
mov
add
sub
pop
retf
leave
push
pop
dec
movsb
outsd
sbb
xor
pushf
mov
lock
mov
int
add
cmp
jmp
pop
dec
jg
push
pop
xor
mov
insb
adc
or
mov
jmp
mov
popa
inc
iret
idiv
jmp
retf
push
mov
cmpsd
stc
retf
les
mov
push
push
sub
mov
pop
mul
ja
sub
mov
pop
retf
inc
mov
xor
retf
jmp
retf
push
mov
mov
rcl
jmp
retf
shr
push
and
movsd
push
sub
ror
xchg
dec
dec
aam
mov
retf
dec
jmp
cmpsb
mov
leave
cmpsd
sbb
and
fcom
retf
rcl
retf
xchg
lodsb
cmp
inc
pusha
retf
add
retf
inc
mov
pop
inc
and
sahf
pop
mov
retf
pop
or
push
or
xchg
push
inc
mov
push
sub
imul
mov
dec
dec
wait
and
push
push
xor
adc
movsd
retf
movsb
cmpsb
and
pop
push
adc
and
cmpsd
mov
retf
mov
retf
and
jmp
cld
frstor
retf
mov
retf
cmp
or
scasb
test
xchg
pop
adc
xchg
retf
xor
inc
xchg
mov
and
dec
or
pop
push
sub
xchg
and
pop
imul
fyl2xp1
std
popf
cmp
retf
mov
jmp
xor
retf
xor
pop
wait
imul
and
fnsave
mov
sub
and
mov
pop
push
fmul
outsd
popa
dec
imul
cld
pop
sar
and
adc
mov
mov
int
jge
inc
or
stc
popf
jp
cmpsd
pushf
and
adc
popf
mov
leave
setz
into
dec
cmp
sbb
mov
jnp
pop
and
push
in
int
sar
or
inc
in
sal
cmp
push
scasd
shl
pop
rcr
in
mov
adc
add
and
jmp
ror
xor
pop
fsubr
and
and
sahf
cmc
std
pop
lock
and
pop
xchg
cwde
inc
adc
mov
call
xor
pop
jnp
sbb
ja
sbb
pusha
mov
jno
push
cmp
ficom
mov
dec
out
jbe
mov
and
and
mov
pushf
and
test
retf
wait
mov
cdq
push
std
push
and
dec
shl
xor
inc
popa
mov
scasb
test
or
dec
dec
mov
sub
mov
shr
inc
jnp
push
dec
das
arpl
jmp
dec
mov
jnp
mov
lodsb
std
insb
inc
out
sub
mov
add
mov
mov
push
push
cmp
jl
cmp
mov
cmp
dec
lock
adc
and
rep
in
imul
push
jbe
and
xor
loop
popa
mov
sub
adc
movsd
xchg
rol
sbb
pop
test
aas
pop
dec
sbb
and
mov
and
add
mov
jo
jns
push
jbe
push
mov
xor
mov
neg
std
mov
jns
insb
mov
mov
sbb
xchg
int
pop
inc
or
pusha
mov
mov
or
scasb
cli
and
mov
or
pushf
xor
imul
sub
les
and
pushf
mov
jmp
mov
out
push
imul
dec
inc
push
sbb
push
arpl
mov
mov
wait
inc
aas
sub
mov
xchg
sub
mov
inc
xor
scasd
call
or
jbe
jnp
inc
repne
sahf
lock
mov
push
mov
adc
pushf
fidivr
jecxz
dec
sub
push
outsd
mov
pop
lodsd
mov
fnsave
nop
mov
lodsd
jo
jbe
cmp
lodsd
jbe
sub
cdq
push
pop
sbb
lodsb
loope
sti
xor
sub
call
movsb
inc
xor
push
movsb
adc
mov
call
outsb
push
in
and
or
lodsd
jbe
push
xor
adc
push
mov
outsb
adc
rep
pop
jns
or
neg
in
jbe
and
mov
pop
or
add
mov
mov
push
retf
lodsb
arpl
jp
das
out
push
and
inc
mov
jbe
sub
in
mov
jno
ja
pop
sbb
dec
pop
jns
sti
test
and
scasb
jbe
mov
out
lock
cmp
jg
mov
sbb
jl
xchg
add
and
pusha
sahf
jl
push
mov
jbe
mov
in
cwde
xchg
add
cmp
fdiv
leave
sub
lodsb
jbe
das
test
popf
mov
mov
jle
lds
insb
mov
scasb
and
and
div
dec
push
push
mov
xor
xchg
mov
scasb
sti
call
jle
lodsb
xchg
popf
sahf
in
jo
mov
or
and
xlat
and
jbe
ror
mov
mov
and
rcl
mov
cmp
loope
pop
cmc
jo
xor
mov
jnp
cdq
mov
sbb
test
mov
popf
dec
shl
mov
aas
mov
js
neg
cmc
cmp
in
mov
cwde
mov
mov
cwde
push
and
leave
jb
test
js
mov
ja
and
and
mov
lds
dec
pop
test
mov
mov
fdiv
sbb
in
xor
mov
mov
fstp
mov
inc
dec
mov
mov
push
idiv
jbe
xchg
jle
inc
dec
mov
dec
mov
pop
arpl
cmc
mov
mov
jbe
jb
scasd
dec
cmp
dec
add
dec
pop
fbstp
insb
mov
xor
mov
fst
cmpsd
pop
div
fstp
mov
mov
pop
mov
sar
mov
sub
test
inc
inc
add
fisub
mov
sal
adc
mov
pop
push
leave
test
ja
pop
pop
sub
cmc
loope
jbe
push
dec
and
push
mov
std
jbe
imul
ficomp
fdivr
sub
xor
jbe
inc
jbe
mov
xchg
mov
xchg
xchg
outsb
aas
mov
lahf
loope
pop
cmc
jo
out
mov
pop
mov
fist
xor
jbe
imul
mov
cmpsd
dec
mov
dec
mov
outsb
mov
pushf
cmpsd
mov
or
test
mov
mov
jbe
cwde
xor
mov
mov
movsd
movzx
xor
mov
xor
sbb
mov
out
and
lea
xchg
jle
and
aas
mov
mov
std
ja
aas
fcomp
dec
fmul
sub
mov
xor
push
call
aam
and
stosd
mov
mov
das
mov
push
add
xchg
mov
sbb
mov
jo
cmp
adc
pop
test
cmp
mov
push
mov
xchg
pop
pop
mov
mov
popf
enter
mov
pop
retf
into
sub
pop
cmp
jbe
push
insd
mov
sbb
jbe
jmp
xlat
test
push
mov
sub
push
add
test
jns
mov
sub
or
cmp
jnp
xor
and
add
ror
and
shl
add
xor
jnp
sub
shl
ror
inc
sub
jns
or
test
jns
sub
xor
and
push
and
xor
push
dec
sub
add
pop
leave
push
mov
sub
push
push
push
xor
jge
sbb
ja
xor
mov
push
sub
xor
add
lea
jns
sub
xor
or
js
sub
mov
cmp
mov
sub
shr
ror
or
jle
xor
cmp
jl
or
mov
test
jl
mov
and
add
lea
push
sub
cmp
jl
xor
mov
push
or
mov
sub
xor
jno
or
and
push
push
add
pop
pop
pop
leave
push
mov
sub
push
and
jno
and
sbb
push
and
sub
push
push
xor
push
lea
call
push
push
lea
push
call
push
and
or
sub
xor
push
or
sub
or
and
or
or
xor
js
xor
push
push
push
mov
call
push
push
and
mov
push
push
call
push
xor
jno
or
push
mov
lea
call
push
sub
jb
sbb
cmp
jb
sub
lea
mov
call
push
sbb
cmp
jbe
xor
lea
push
mov
shr
add
pop
leave
push
mov
sub
push
push
push
or
sub
sbb
ror
shl
lea
add
xor
mov
or
test
mov
push
mov
push
dec
xor
lea
lea
call
push
push
push
push
cmp
jp
or
or
ror
lea
mov
push
call
push
and
sub
jns
or
mov
add
xor
sub
inc
push
push
test
ja
sbb
add
pop
pop
pop
leave
push
mov
sub
push
push
xor
jns
or
xor
push
push
xor
push
push
call
push
xor
sbb
sub
jno
mov
push
call
push
mov
or
xor
or
and
or
and
mov
push
push
push
call
push
add
jns
push
sub
sub
push
xor
and
xor
jbe
or
or
add
and
lea
call
push
mov
push
shr
push
add
push
push
push
lea
call
push
add
ror
shl
add
push
xor
and
sub
cmp
jp
and
sub
xor
and
add
pop
pop
leave
push
mov
sub
push
push
add
dec
mov
call
push
xor
not
ror
mov
call
push
push
or
xor
and
sub
lea
push
test
ja
xor
or
cmp
jb
and
sub
and
sub
mov
test
jnp
sub
add
add
lea
not
sub
push
push
lea
push
call
push
sub
push
sub
xor
rol
inc
not
and
mov
push
push
call
push
push
add
pop
pop
leave
push
mov
add
push
push
push
push
push
mov
push
call
add
mov
push
push
call
add
sub
add
mov
sub
mov
mov
mov
add
mov
mov
push
and
push
shr
mov
add
xchg
sub
mov
or
push
and
push
mov
mov
call
xor
mov
mov
push
pop
mov
mov
shl
lea
or
mov
push
pop
add
push
sbb
pop
sbb
xor
mov
mov
lea
call
mov
push
push
call
add
xor
sub
inc
push
sub
mov
push
mov
call
add
pop
push
push
lea
push
call
add
sub
and
mov
push
mov
call
push
xor
add
push
call
pop
pop
mov
pop
push
push
push
lea
call
add
leave
push
mov
add
push
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
call
mov
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
